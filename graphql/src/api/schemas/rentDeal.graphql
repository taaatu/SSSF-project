scalar DateTime

type RentDeal {
  id: ID!
  item: Item!
  start_date: DateTime!
  end_date: DateTime!
  created_date: DateTime!
  item_user: User!
  item_owner: User!
  status: Status!
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
  RETURNED
}

type Query {
  rentDeals: [RentDeal!]!
  rentDeal(id: ID!): RentDeal!
  rentDealsReceived: [RentDeal]
  rentDealsSent: [RentDeal]
}

type Mutation {
  createRentDeal(
    item: ID!
    start_date: DateTime!
    end_date: DateTime!
    item_owner: ID!
  ): RentDeal!
  acceptRentDeal(rent_deal_id: ID!): RentDeal!
  rejectRentDeal(rent_deal_id: ID!): RentDeal!
  endRentDeal(rent_deal_id: ID!): RentDeal!
}
